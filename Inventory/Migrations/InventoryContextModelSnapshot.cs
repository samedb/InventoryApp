// <auto-generated />
using System;
using Inventory;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Inventory.Migrations
{
    [DbContext(typeof(InventoryContext))]
    partial class InventoryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4");

            modelBuilder.Entity("Inventory.Inventar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Kolicina")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PredmetId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProstorijaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PredmetId");

                    b.HasIndex("ProstorijaId");

                    b.ToTable("Inventar");
                });

            modelBuilder.Entity("Inventory.Predmet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cena")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Marka")
                        .HasColumnType("TEXT");

                    b.Property<string>("Model")
                        .HasColumnType("TEXT");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Predmeti");
                });

            modelBuilder.Entity("Inventory.Prostorija", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Duzina")
                        .HasColumnType("TEXT");

                    b.Property<string>("NazivProstorije")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SefProstorijeUsername")
                        .HasColumnType("TEXT");

                    b.Property<string>("Sirina")
                        .HasColumnType("TEXT");

                    b.Property<string>("Sprat")
                        .HasColumnType("TEXT");

                    b.Property<string>("Visina")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SefProstorijeUsername");

                    b.ToTable("Prostorije");
                });

            modelBuilder.Entity("Inventory.Radnik", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("INTEGER");

                    b.Property<string>("JMBG")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Pol")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("StrucnaSprema")
                        .HasColumnType("TEXT");

                    b.HasKey("Username");

                    b.ToTable("Radnici");
                });

            modelBuilder.Entity("Inventory.Zaduzenje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DatumZaduzivanja")
                        .HasColumnType("TEXT");

                    b.Property<int>("Kolicina")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PredmetId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProstorijaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RadnikKojiDajeInventarUsername")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RadnikKojiPrimaInventarUsername")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PredmetId");

                    b.HasIndex("ProstorijaId");

                    b.HasIndex("RadnikKojiDajeInventarUsername");

                    b.HasIndex("RadnikKojiPrimaInventarUsername");

                    b.ToTable("Zaduzenja");
                });

            modelBuilder.Entity("Inventory.Inventar", b =>
                {
                    b.HasOne("Inventory.Predmet", "Predmet")
                        .WithMany()
                        .HasForeignKey("PredmetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inventory.Prostorija", "Prostorija")
                        .WithMany()
                        .HasForeignKey("ProstorijaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Inventory.Prostorija", b =>
                {
                    b.HasOne("Inventory.Radnik", "SefProstorije")
                        .WithMany()
                        .HasForeignKey("SefProstorijeUsername");
                });

            modelBuilder.Entity("Inventory.Zaduzenje", b =>
                {
                    b.HasOne("Inventory.Predmet", "Predmet")
                        .WithMany()
                        .HasForeignKey("PredmetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inventory.Prostorija", "Prostorija")
                        .WithMany()
                        .HasForeignKey("ProstorijaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inventory.Radnik", "RadnikKojiDajeInventar")
                        .WithMany()
                        .HasForeignKey("RadnikKojiDajeInventarUsername")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inventory.Radnik", "RadnikKojiPrimaInventar")
                        .WithMany()
                        .HasForeignKey("RadnikKojiPrimaInventarUsername")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
